
#Regle 5: la date =janvier février mars -> printemps, avril, may, juin-> été, july, aout, septembre->automne, octobre,novembre,décembre->hiver
	[rule5: (?capteur ns:date ?date)

  			op:numeric-equal(fn:compare(STR(?date),STR("03-31")), -1)

   -> (thisSaison  ns:Saison_Name "printemps"^^xsd:string)
  	]

 	[rule6: (?capteur ns:date ?date)
                op:numeric-equal(fn:compare(STR("03-31"),STR(?date)), -1)
      			op:numeric-equal(STR(?date),fn:compare(STR("06-31")), -1)

       -> (thisSaison  ns:Saison_Name "été"^^xsd:string)
    ]
    [rule7: (?capteur ns:date ?date)
                op:numeric-equal(fn:compare(STR("06-31"),STR(?date)), -1)
                op:numeric-equal(STR(?date),fn:compare(STR("09-30")), -1)

       -> (thisSaison  ns:Saison_Name "automne"^^xsd:string)
    ]
	[rule8: (?capteur ns:date ?date)
                op:numeric-equal(fn:compare(STR("09-30"), STR(?date)), -1)
      			op:numeric-equal(STR(?date),fn:compare(STR("12-31")), -1)

       -> (thisSaison  ns:Saison_Name "hiver"^^xsd:string)
    ]
#Regle 5: heure

[rule9: (?capteur ns:heure ?heure)
    op:numeric-equal(fn:compare(STR("06:00:00.000000"), STR(?heure)), -1)
    op:numeric-equal(fn:compare(STR(?heure),STR("12:00:00.000000")), -1)

-> (periode_day  ns:periode_time "matin"^^xsd:string)
]

[rule10: (?capteur ns:heure ?heure)

 op:numeric-equal(fn:compare(STR("12:00:00.000000"), STR(?heure)), -1)
 op:numeric-equal(fn:compare(STR(?heure),STR("18:00:00.000000")), -1)

-> (periode_day  ns:periode_time "après-midi"^^xsd:string)
]

[rule11: (?capteur ns:heure ?heure)
        op:numeric-equal(fn:compare(STR("18:00:00.000000"), STR(?heure)), -1)

-> (periode_day  ns:periode_time "soir"^^xsd:string)
]

[rule12: (?capteur ns:heure ?heure)
        op:numeric-equal(fn:compare(STR(?heure),STR("6:00:00.000000")), -1)

-> (periode_day  ns:periode_time "nuit"^^xsd:string)
]


select ?x ?mois where {
 values ?x { "2010-11-04" }
 bind(strafter( ?x, "2010-" ) as ?prefix )
 bind( strbefore( ?prefix, "-" ) as ?mois )
}

PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
select ?x IF(xsd:integer(?mois)<=3, "printemps",  IF(xsd:integer(?mois)<=6, "été",  IF(xsd:integer(?mois)<=9, "automne",  IF(xsd:integer(?mois)<=12, "hiver", "une erreur de format de date"))))
where {
values ?x { "2010-11-04" }
bind(strafter( ?x, "2010-" ) as ?prefix )
bind( strbefore( ?prefix, "-" ) as ?mois )
}

PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
[rule13: (?capteur ns:heure ?date)
bind(strafter( ?date, "2010-" ) as ?prefix )
bind( strbefore( ?prefix, "-" ) as ?mois )
greaterThan(xsd:integer(?mois), "9"^^xsd:integer)
}]

  [rule13: (?capteur ns:date ?date)
  bind(strafter( ?date, "2010-" ) as ?prefix )
  bind( strbefore( ?prefix, "-" ) as ?mois )
  greaterThan(xsd:integer(?mois), "9"^^xsd:integer)
  }]

   lessThan(?mois,"13"^^xsd:int)

   equalToOneCapteursInList(subject,new String[]{"D003"}


  #Regle 14: S'il y a "l'automne & Soir & chauffage d'office OFF" => rendre le chauffage ON
   	[rule14:

   			(?capteur ns:estDans ?office) (?capteur ns:date ?date)

   			(?chauffage rdf:type ns:Chauffage) (?chauffage ns:etat "OFF")

  			(?chauffage ns:estDans ?office) (?capteur ns:Saison_Name ?value) equal(?value,"Automne"^^xsd:string)

   			(?capteur ns:periode_time ?val) equal(?val,"Soir"^^xsd:string)

    -> (?chauffage  ns:etat "ON"^^xsd:string) (?chauffage ns:date ?date)
   	]

  #Regle 15:  chauffage d'office ON & "M025","M026","M027" les trois capteur OFF" => rendre le chauffage OFF
      [rule15:

              (?capteur ns:estDans ?office) (?capteur ns:etat "OFF"^^xsd:string)

              (?chauffage rdf:type ns:Chauffage) (?chauffage ns:etat "ON")

              (?chauffage ns:estDans ?office)

    -> (?chauffage  ns:etat "OFF"^^xsd:string)
      ]

  #Regle 16: S'il y a "l'automne & Soir & volet_Bedroom_big Ouvert" => rendre le volet_Bedroom_big Fermee
   	[rule16:
  		(?capteur ns:estDans ?Bedroom_big) (?capteur ns:date ?date)
  		(?vlt rdf:type ns:Volet) (?vlt ns:etat "Ouvert")
  		(?vlt ns:estDans ?Bedroom_big) (?capteur ns:Saison_Name ?value) equal(?value,"Automne"^^xsd:string)
  		(?capteur ns:periode_time ?val) equal(?val,"Soir"^^xsd:string)

  	  -> (?vlt  ns:etat "Fermee"^^xsd:string) (?vlt ns:date ?date)
  	 	]

[rule14:

 			(?capteur ns:estDans ?office) (?capteur ns:etatActive "OFF")
 			(?chauffage rdf:type ns:Chauffage)

 	-> (?chauffage ns:etat "OFF"^^xsd:string) (?capteur ns:etatActive "ON")
 	]
[rule15:

 			(ns:M025 ns:etat "ON")
 			(?chauffage rdf:type ns:Chauffage)

 	-> (?chauffage ns:etat "ON"^^xsd:string)
 	]
[rule18:

 			(ns:M026 ns:etat "ON")
 			(?chauffage rdf:type ns:Chauffage)

 	-> (?chauffage ns:etat "ON"^^xsd:string)
 	]
[rule16:

 			(ns:M027 ns:etat "ON")
 			(?chauffage rdf:type ns:Chauffage)

 	-> (?chauffage ns:etat "ON"^^xsd:string)
 	]